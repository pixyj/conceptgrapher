
[{"pk": 1, "model": "contenttypes.contenttype", "fields": {"model": "logentry", "name": "log entry", "app_label": "admin"}}, {"pk": 2, "model": "contenttypes.contenttype", "fields": {"model": "permission", "name": "permission", "app_label": "auth"}}, {"pk": 3, "model": "contenttypes.contenttype", "fields": {"model": "group", "name": "group", "app_label": "auth"}}, {"pk": 4, "model": "contenttypes.contenttype", "fields": {"model": "user", "name": "user", "app_label": "auth"}}, {"pk": 5, "model": "contenttypes.contenttype", "fields": {"model": "contenttype", "name": "content type", "app_label": "contenttypes"}}, {"pk": 6, "model": "contenttypes.contenttype", "fields": {"model": "session", "name": "session", "app_label": "sessions"}}, {"pk": 7, "model": "contenttypes.contenttype", "fields": {"model": "topic", "name": "topic", "app_label": "topo"}}, {"pk": 8, "model": "contenttypes.contenttype", "fields": {"model": "concept", "name": "concept", "app_label": "topo"}}, {"pk": 9, "model": "contenttypes.contenttype", "fields": {"model": "conceptresource", "name": "concept resource", "app_label": "topo"}}, {"pk": 10, "model": "contenttypes.contenttype", "fields": {"model": "conceptrelationship", "name": "concept relationship", "app_label": "topo"}}, {"pk": 11, "model": "contenttypes.contenttype", "fields": {"model": "quiz", "name": "quiz", "app_label": "quiz"}}, {"pk": 12, "model": "contenttypes.contenttype", "fields": {"model": "choice", "name": "choice", "app_label": "quiz"}}, {"pk": 13, "model": "contenttypes.contenttype", "fields": {"model": "userquizattempt", "name": "user quiz attempt", "app_label": "quiz"}}, {"pk": 14, "model": "contenttypes.contenttype", "fields": {"model": "anonquizattempt", "name": "anon quiz attempt", "app_label": "quiz"}}, {"pk": 15, "model": "contenttypes.contenttype", "fields": {"model": "aggregateconceptattempt", "name": "aggregate concept attempt", "app_label": "quiz"}}, {"pk": "dwearw8c9lmk4gjnq94ada4o5lt7efvm", "model": "sessions.session", "fields": {"expire_date": "2013-12-28T09:59:16.269Z", "session_data": "ZjYzMzJmYTlhNzQwNjdhYzY5OTA2ZjNhZmFiMTY0NTkyOWQxMzUzNjp7fQ=="}}, {"pk": "dypmpo0532jw68i4ta5mtqmw39g96wpw", "model": "sessions.session", "fields": {"expire_date": "2013-12-30T19:25:44.668Z", "session_data": "ZjYzMzJmYTlhNzQwNjdhYzY5OTA2ZjNhZmFiMTY0NTkyOWQxMzUzNjp7fQ=="}}, {"pk": "evbsdgvqnqu61441n7ew412hdki03w4q", "model": "sessions.session", "fields": {"expire_date": "2013-12-30T20:10:19.507Z", "session_data": "ZjYzMzJmYTlhNzQwNjdhYzY5OTA2ZjNhZmFiMTY0NTkyOWQxMzUzNjp7fQ=="}}, {"pk": "jy7c4k59qwu5622dhmhtpyw0fsax3gbg", "model": "sessions.session", "fields": {"expire_date": "2013-12-30T14:09:57.099Z", "session_data": "ZjYzMzJmYTlhNzQwNjdhYzY5OTA2ZjNhZmFiMTY0NTkyOWQxMzUzNjp7fQ=="}}, {"pk": "mpf4jcp5ipd9z1isw9wo8wkzzb35ujcr", "model": "sessions.session", "fields": {"expire_date": "2013-12-27T15:34:57.713Z", "session_data": "YjdiNzE0MzZmNmM4ZmMyOTg5MmRhOGZkNTlhMDYxMTIzOGJiNmVjMjp7Il9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9pZCI6NH0="}}, {"pk": "pll02vdwgrj77erqjabpnnyhm6nw9lzq", "model": "sessions.session", "fields": {"expire_date": "2013-12-27T18:15:08.405Z", "session_data": "YjdiNzE0MzZmNmM4ZmMyOTg5MmRhOGZkNTlhMDYxMTIzOGJiNmVjMjp7Il9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9pZCI6NH0="}}, {"pk": "te3wfc8qz7gnb9gqnwnsfdui2qgmm3bt", "model": "sessions.session", "fields": {"expire_date": "2013-12-30T19:22:49.065Z", "session_data": "ZjYzMzJmYTlhNzQwNjdhYzY5OTA2ZjNhZmFiMTY0NTkyOWQxMzUzNjp7fQ=="}}, {"pk": "xlvo0xvs9hmvxabqf7q3d7eiqt9tkdrf", "model": "sessions.session", "fields": {"expire_date": "2013-12-28T09:44:28.758Z", "session_data": "ZjYzMzJmYTlhNzQwNjdhYzY5OTA2ZjNhZmFiMTY0NTkyOWQxMzUzNjp7fQ=="}}, {"pk": 1, "model": "topo.topic", "fields": {"last_modified": "2013-10-07T16:59:42.099Z", "slug": "python", "name": "Python", "created": "2013-10-07T12:59:55.051Z"}}, {"pk": 1, "model": "topo.concept", "fields": {"topic": 1, "last_modified": "2013-10-07T17:00:37.804Z", "slug": "comments", "name": "comments", "created": "2013-10-07T13:16:20.394Z"}}, {"pk": 2, "model": "topo.concept", "fields": {"topic": 1, "last_modified": "2013-10-07T17:00:38.266Z", "slug": "basic-expressions", "name": "basic expressions", "created": "2013-10-07T13:21:29.319Z"}}, {"pk": 3, "model": "topo.concept", "fields": {"topic": 1, "last_modified": "2013-10-07T17:00:38.436Z", "slug": "variables", "name": "variables", "created": "2013-10-07T13:31:53.155Z"}}, {"pk": 4, "model": "topo.concept", "fields": {"topic": 1, "last_modified": "2013-10-07T17:00:38.626Z", "slug": "strings", "name": "strings", "created": "2013-10-07T14:47:11.945Z"}}, {"pk": 5, "model": "topo.concept", "fields": {"topic": 1, "last_modified": "2013-10-07T17:01:13.266Z", "slug": "numbers", "name": "numbers", "created": "2013-10-07T14:49:16.793Z"}}, {"pk": 6, "model": "topo.concept", "fields": {"topic": 1, "last_modified": "2013-10-08T20:39:31.834Z", "slug": "lists", "name": "lists", "created": "2013-10-08T20:39:31.834Z"}}, {"pk": 7, "model": "topo.concept", "fields": {"topic": 1, "last_modified": "2013-10-08T21:16:56.596Z", "slug": "programming-intro", "name": "programming intro", "created": "2013-10-08T20:54:17.760Z"}}, {"pk": 8, "model": "topo.concept", "fields": {"topic": 1, "last_modified": "2013-10-08T21:17:47.043Z", "slug": "control-flow-tools", "name": "Control Flow Tools", "created": "2013-10-08T21:17:47.043Z"}}, {"pk": 9, "model": "topo.concept", "fields": {"topic": 1, "last_modified": "2013-10-08T22:29:14.551Z", "slug": "defining-functions", "name": "Defining Functions", "created": "2013-10-08T22:11:07.676Z"}}, {"pk": 10, "model": "topo.concept", "fields": {"topic": 1, "last_modified": "2013-10-09T19:36:26.328Z", "slug": "defining-functions-2", "name": "Defining Functions 2", "created": "2013-10-09T19:22:02.165Z"}}, {"pk": 11, "model": "topo.concept", "fields": {"topic": 1, "last_modified": "2013-10-09T19:59:11.915Z", "slug": "lists-2", "name": "lists 2", "created": "2013-10-09T19:37:39.128Z"}}, {"pk": 12, "model": "topo.concept", "fields": {"topic": 1, "last_modified": "2013-10-10T19:15:19.812Z", "slug": "functional-programming-tools", "name": "Functional programming tools", "created": "2013-10-09T19:56:57.663Z"}}, {"pk": 13, "model": "topo.concept", "fields": {"topic": 1, "last_modified": "2013-10-09T20:03:56.720Z", "slug": "dictionaries", "name": "dictionaries", "created": "2013-10-09T20:03:56.720Z"}}, {"pk": 14, "model": "topo.concept", "fields": {"topic": 1, "last_modified": "2013-10-10T19:03:40.105Z", "slug": "sequences", "name": "Sequences", "created": "2013-10-09T20:08:17.093Z"}}, {"pk": 15, "model": "topo.concept", "fields": {"topic": 1, "last_modified": "2013-10-09T20:19:07.243Z", "slug": "sets", "name": "Sets", "created": "2013-10-09T20:19:07.243Z"}}, {"pk": 16, "model": "topo.concept", "fields": {"topic": 1, "last_modified": "2013-10-09T20:22:32.794Z", "slug": "the-del-statement", "name": "The del statement", "created": "2013-10-09T20:22:32.794Z"}}, {"pk": 17, "model": "topo.concept", "fields": {"topic": 1, "last_modified": "2013-10-10T19:40:00.350Z", "slug": "modules", "name": "modules", "created": "2013-10-10T19:04:47.706Z"}}, {"pk": 18, "model": "topo.concept", "fields": {"topic": 1, "last_modified": "2013-12-12T02:33:06.486Z", "slug": "design-and-philosophy", "name": "design-and-philosophy", "created": "2013-10-10T20:07:11.983Z"}}, {"pk": 19, "model": "topo.concept", "fields": {"topic": 1, "last_modified": "2013-12-16T17:52:03.238Z", "slug": "io", "name": "IO", "created": "2013-10-10T20:41:57.425Z"}}, {"pk": 20, "model": "topo.concept", "fields": {"topic": 1, "last_modified": "2013-12-12T18:09:42.631Z", "slug": "keyword-arguments-and-argument-lists", "name": "Keyword arguments and argument lists", "created": "2013-12-12T17:52:30.372Z"}}, {"pk": 21, "model": "topo.concept", "fields": {"topic": 1, "last_modified": "2013-12-16T18:00:15.111Z", "slug": "errors-and-exceptions", "name": "Errors and Exceptions", "created": "2013-12-16T18:00:15.111Z"}}, {"pk": 22, "model": "topo.concept", "fields": {"topic": 1, "last_modified": "2013-12-16T18:43:27.604Z", "slug": "scopes-and-namespaces", "name": "Scopes and Namespaces", "created": "2013-12-16T18:43:27.604Z"}}, {"pk": 23, "model": "topo.concept", "fields": {"topic": 1, "last_modified": "2013-12-16T19:39:03.183Z", "slug": "classes", "name": "Classes", "created": "2013-12-16T19:39:03.183Z"}}, {"pk": 1, "model": "topo.conceptresource", "fields": {"url": "http://docs.python.org/2/tutorial/introduction.html#an-informal-introduction-to-python", "concept": 1}}, {"pk": 2, "model": "topo.conceptresource", "fields": {"url": "http://docs.python.org/2/tutorial/introduction.html#using-python-as-a-calculator", "concept": 2}}, {"pk": 3, "model": "topo.conceptresource", "fields": {"url": "http://docs.python.org/2/tutorial/introduction.html#numbers", "concept": 3}}, {"pk": 4, "model": "topo.conceptresource", "fields": {"url": "http://stackoverflow.com/questions/17292439/swap-two-variables-without-temp-in-python", "concept": 3}}, {"pk": 5, "model": "topo.conceptresource", "fields": {"url": "http://docs.python.org/2/tutorial/introduction.html#strings", "concept": 4}}, {"pk": 6, "model": "topo.conceptresource", "fields": {"url": "http://stackoverflow.com/questions/9097994/arent-python-strings-immutable", "concept": 4}}, {"pk": 7, "model": "topo.conceptresource", "fields": {"url": "http://docs.python.org/2/tutorial/introduction.html#numbers", "concept": 5}}, {"pk": 8, "model": "topo.conceptresource", "fields": {"url": "http://docs.python.org/2/tutorial/introduction.html#lists", "concept": 6}}, {"pk": 9, "model": "topo.conceptresource", "fields": {"url": "http://docs.python.org/2/tutorial/introduction.html#first-steps-towards-programming", "concept": 7}}, {"pk": 10, "model": "topo.conceptresource", "fields": {"url": "http://docs.python.org/2/tutorial/controlflow.html#more-control-flow-tools", "concept": 8}}, {"pk": 11, "model": "topo.conceptresource", "fields": {"url": "http://docs.python.org/2/tutorial/controlflow.html#defining-functions", "concept": 9}}, {"pk": 12, "model": "topo.conceptresource", "fields": {"url": "http://stackoverflow.com/questions/986006/python-how-do-i-pass-a-variable-by-reference", "concept": 9}}, {"pk": 13, "model": "topo.conceptresource", "fields": {"url": "http://docs.python.org/2/tutorial/controlflow.html#more-on-defining-functions", "concept": 10}}, {"pk": 14, "model": "topo.conceptresource", "fields": {"url": "http://stackoverflow.com/questions/1233448/no-multiline-lambda-in-python-why-not", "concept": 10}}, {"pk": 15, "model": "topo.conceptresource", "fields": {"url": "http://docs.python.org/2/tutorial/datastructures.html#more-on-lists", "concept": 11}}, {"pk": 16, "model": "topo.conceptresource", "fields": {"url": "http://effbot.org/zone/python-list.htm", "concept": 11}}, {"pk": 17, "model": "topo.conceptresource", "fields": {"url": "https://wiki.python.org/moin/TimeComplexity", "concept": 11}}, {"pk": 18, "model": "topo.conceptresource", "fields": {"url": "http://docs.python.org/2/tutorial/datastructures.html#functional-programming-tools", "concept": 12}}, {"pk": 19, "model": "topo.conceptresource", "fields": {"url": "http://docs.python.org/2/tutorial/datastructures.html#list-comprehensions", "concept": 11}}, {"pk": 20, "model": "topo.conceptresource", "fields": {"url": "http://docs.python.org/2/tutorial/datastructures.html#dictionaries", "concept": 13}}, {"pk": 21, "model": "topo.conceptresource", "fields": {"url": "http://docs.python.org/2/tutorial/datastructures.html#tuples-and-sequences", "concept": 14}}, {"pk": 22, "model": "topo.conceptresource", "fields": {"url": "http://docs.python.org/2/tutorial/datastructures.html#sets", "concept": 15}}, {"pk": 23, "model": "topo.conceptresource", "fields": {"url": "http://docs.python.org/2/tutorial/datastructures.html#the-del-statement", "concept": 16}}, {"pk": 24, "model": "topo.conceptresource", "fields": {"url": "http://docs.python.org/2/tutorial/datastructures.html#comparing-sequences-and-other-types", "concept": 14}}, {"pk": 25, "model": "topo.conceptresource", "fields": {"url": "http://stackoverflow.com/questions/2987958/how-is-the-is-keyword-implemented-in-python", "concept": 14}}, {"pk": 26, "model": "topo.conceptresource", "fields": {"url": "http://docs.python.org/2/tutorial/modules.html", "concept": 17}}, {"pk": 27, "model": "topo.conceptresource", "fields": {"url": "http://python-history.blogspot.in/2009/04/origins-of-pythons-functional-features.html", "concept": 12}}, {"pk": 28, "model": "topo.conceptresource", "fields": {"url": "http://effbot.org/zone/import-confusion.htm", "concept": 17}}, {"pk": 29, "model": "topo.conceptresource", "fields": {"url": "http://docs.python.org/2/faq/programming.html", "concept": 18}}, {"pk": 30, "model": "topo.conceptresource", "fields": {"url": "http://stackoverflow.com/questions/865911/is-everything-an-object-in-python-like-ruby", "concept": 18}}, {"pk": 31, "model": "topo.conceptresource", "fields": {"url": "http://stackoverflow.com/questions/6889747/is-python-interpreted-or-compiled-or-both", "concept": 18}}, {"pk": 32, "model": "topo.conceptresource", "fields": {"url": "http://docs.python.org/2/tutorial/inputoutput.html", "concept": 19}}, {"pk": 33, "model": "topo.conceptresource", "fields": {"url": "http://www.python.org/dev/peps/pep-0020/", "concept": 18}}, {"pk": 34, "model": "topo.conceptresource", "fields": {"url": "http://docs.python.org/2/tutorial/inputoutput.html#reading-and-writing-files", "concept": 19}}, {"pk": 35, "model": "topo.conceptresource", "fields": {"url": "http://docs.python.org/2/tutorial/errors.html#errors-and-exceptions", "concept": 21}}, {"pk": 36, "model": "topo.conceptresource", "fields": {"url": "http://docs.python.org/2/tutorial/classes.html#python-scopes-and-namespaces", "concept": 22}}, {"pk": 37, "model": "topo.conceptresource", "fields": {"url": "http://docs.python.org/2/tutorial/classes.html#class-objects", "concept": 23}}, {"pk": 1, "model": "topo.conceptrelationship", "fields": {"before": 1, "last_modified": "2013-10-07T17:01:41.928Z", "after": 2, "created": "2013-10-07T17:01:41.928Z"}}, {"pk": 2, "model": "topo.conceptrelationship", "fields": {"before": 2, "last_modified": "2013-10-07T17:01:49.358Z", "after": 3, "created": "2013-10-07T17:01:49.357Z"}}, {"pk": 3, "model": "topo.conceptrelationship", "fields": {"before": 3, "last_modified": "2013-10-07T17:02:29.747Z", "after": 5, "created": "2013-10-07T17:02:29.747Z"}}, {"pk": 4, "model": "topo.conceptrelationship", "fields": {"before": 3, "last_modified": "2013-10-07T17:02:36.803Z", "after": 4, "created": "2013-10-07T17:02:36.803Z"}}, {"pk": 5, "model": "topo.conceptrelationship", "fields": {"before": 4, "last_modified": "2013-10-08T21:02:55.403Z", "after": 6, "created": "2013-10-08T20:50:34.035Z"}}, {"pk": 6, "model": "topo.conceptrelationship", "fields": {"before": 6, "last_modified": "2013-10-08T21:55:01.164Z", "after": 7, "created": "2013-10-08T21:55:01.164Z"}}, {"pk": 7, "model": "topo.conceptrelationship", "fields": {"before": 7, "last_modified": "2013-10-08T21:55:09.281Z", "after": 8, "created": "2013-10-08T21:55:09.281Z"}}, {"pk": 8, "model": "topo.conceptrelationship", "fields": {"before": 8, "last_modified": "2013-10-09T19:36:01.428Z", "after": 9, "created": "2013-10-09T19:36:01.428Z"}}, {"pk": 9, "model": "topo.conceptrelationship", "fields": {"before": 9, "last_modified": "2013-10-09T19:36:11.214Z", "after": 10, "created": "2013-10-09T19:36:11.214Z"}}, {"pk": 10, "model": "topo.conceptrelationship", "fields": {"before": 9, "last_modified": "2013-10-09T19:37:55.873Z", "after": 11, "created": "2013-10-09T19:37:55.872Z"}}, {"pk": 11, "model": "topo.conceptrelationship", "fields": {"before": 9, "last_modified": "2013-10-09T20:05:12.618Z", "after": 13, "created": "2013-10-09T20:05:12.618Z"}}, {"pk": 12, "model": "topo.conceptrelationship", "fields": {"before": 13, "last_modified": "2013-10-09T20:16:44.938Z", "after": 14, "created": "2013-10-09T20:16:44.938Z"}}, {"pk": 13, "model": "topo.conceptrelationship", "fields": {"before": 11, "last_modified": "2013-10-09T20:17:06.573Z", "after": 14, "created": "2013-10-09T20:17:06.573Z"}}, {"pk": 14, "model": "topo.conceptrelationship", "fields": {"before": 15, "last_modified": "2013-10-09T20:20:58.730Z", "after": 14, "created": "2013-10-09T20:20:58.730Z"}}, {"pk": 15, "model": "topo.conceptrelationship", "fields": {"before": 14, "last_modified": "2013-10-09T20:22:47.627Z", "after": 16, "created": "2013-10-09T20:22:47.627Z"}}, {"pk": 16, "model": "topo.conceptrelationship", "fields": {"before": 5, "last_modified": "2013-10-09T20:36:50.707Z", "after": 6, "created": "2013-10-09T20:36:50.707Z"}}, {"pk": 17, "model": "topo.conceptrelationship", "fields": {"before": 14, "last_modified": "2013-10-10T04:20:07.721Z", "after": 12, "created": "2013-10-10T04:20:07.721Z"}}, {"pk": 18, "model": "topo.conceptrelationship", "fields": {"before": 11, "last_modified": "2013-10-10T04:22:16.405Z", "after": 15, "created": "2013-10-10T04:22:16.405Z"}}, {"pk": 19, "model": "topo.conceptrelationship", "fields": {"before": 10, "last_modified": "2013-10-10T19:05:29.152Z", "after": 17, "created": "2013-10-10T19:05:29.152Z"}}, {"pk": 20, "model": "topo.conceptrelationship", "fields": {"before": 17, "last_modified": "2013-10-10T20:07:39.630Z", "after": 18, "created": "2013-10-10T20:07:39.630Z"}}, {"pk": 21, "model": "topo.conceptrelationship", "fields": {"before": 16, "last_modified": "2013-10-10T20:12:38.871Z", "after": 18, "created": "2013-10-10T20:12:38.871Z"}}, {"pk": 22, "model": "topo.conceptrelationship", "fields": {"before": 12, "last_modified": "2013-10-10T20:12:47.274Z", "after": 18, "created": "2013-10-10T20:12:47.274Z"}}, {"pk": 23, "model": "topo.conceptrelationship", "fields": {"before": 18, "last_modified": "2013-10-10T20:42:32.834Z", "after": 19, "created": "2013-10-10T20:42:32.834Z"}}, {"pk": 24, "model": "topo.conceptrelationship", "fields": {"before": 9, "last_modified": "2013-12-13T15:35:57.435Z", "after": 20, "created": "2013-12-13T15:35:57.435Z"}}, {"pk": 25, "model": "topo.conceptrelationship", "fields": {"before": 19, "last_modified": "2013-12-16T18:00:37.403Z", "after": 21, "created": "2013-12-16T18:00:37.403Z"}}, {"pk": 26, "model": "topo.conceptrelationship", "fields": {"before": 21, "last_modified": "2013-12-16T19:21:50.248Z", "after": 22, "created": "2013-12-16T19:21:50.248Z"}}, {"pk": 27, "model": "topo.conceptrelationship", "fields": {"before": 22, "last_modified": "2013-12-16T19:39:30.600Z", "after": 23, "created": "2013-12-16T19:39:30.600Z"}}, {"pk": 1, "model": "quiz.quiz", "fields": {"concept": 1, "answer": "", "last_modified": "2013-10-07T13:25:22.148Z", "question": "Comments in python start with which of these characters?", "created": "2013-10-07T13:18:24.125Z"}}, {"pk": 2, "model": "quiz.quiz", "fields": {"concept": 2, "answer": "5", "last_modified": "2013-10-07T13:28:51.875Z", "question": "What's the result of the following expression:\r\n\r\n`>>> 2 + 3`", "created": "2013-10-07T13:28:51.875Z"}}, {"pk": 3, "model": "quiz.quiz", "fields": {"concept": 2, "answer": "6", "last_modified": "2013-10-07T13:29:18.328Z", "question": "What's the result of the following expression:\r\n\r\n`>>> 2 * 3`", "created": "2013-10-07T13:29:02.111Z"}}, {"pk": 4, "model": "quiz.quiz", "fields": {"concept": 3, "answer": "80", "last_modified": "2013-10-07T13:32:07.971Z", "question": "What is the value of `height`\r\n\r\n    width = 10\r\n    height = width * 8", "created": "2013-10-07T13:32:07.971Z"}}, {"pk": 5, "model": "quiz.quiz", "fields": {"concept": 3, "answer": "", "last_modified": "2013-10-07T13:35:25.611Z", "question": "What are the values of x, y and z after the following expression is evaluated?\r\n\r\n    x = y = z = 100", "created": "2013-10-07T13:35:25.611Z"}}, {"pk": 6, "model": "quiz.quiz", "fields": {"concept": 3, "answer": "", "last_modified": "2013-10-23T14:17:21.859Z", "question": "What are the values of a and b after the following code is evaluated?\r\n\r\n    a = 1\r\n    b = 2\r\n    a, b = b, a", "created": "2013-10-07T13:37:53.884Z"}}, {"pk": 7, "model": "quiz.quiz", "fields": {"concept": 4, "answer": "", "last_modified": "2013-10-07T14:47:45.838Z", "question": "Strings are immutable.", "created": "2013-10-07T14:47:45.838Z"}}, {"pk": 8, "model": "quiz.quiz", "fields": {"concept": 5, "answer": "0", "last_modified": "2013-10-07T21:52:50.861Z", "question": "What's the value of *a*?\r\n\r\n    a = 10 / 20", "created": "2013-10-07T14:50:21.552Z"}}, {"pk": 9, "model": "quiz.quiz", "fields": {"concept": 5, "answer": "0.5", "last_modified": "2013-10-07T21:52:41.743Z", "question": "What's the value of *a*?\r\n\r\n    a = 10 / 20.0", "created": "2013-10-07T14:51:01.146Z"}}, {"pk": 10, "model": "quiz.quiz", "fields": {"concept": 4, "answer": "", "last_modified": "2013-10-07T15:12:15.676Z", "question": "string literals can be enclosed in a pair of matching _________.\r\nSelect all that apply.", "created": "2013-10-07T14:54:10.608Z"}}, {"pk": 11, "model": "quiz.quiz", "fields": {"concept": 4, "answer": "", "last_modified": "2013-10-07T15:12:26.242Z", "question": "Multiple line string literals can be enclosed in pair of matching ____________", "created": "2013-10-07T14:59:40.566Z"}}, {"pk": 12, "model": "quiz.quiz", "fields": {"concept": 4, "answer": "hihihihihi", "last_modified": "2013-10-07T21:52:02.560Z", "question": "What's the value of *y* ?\r\n\r\n    x = \"hi\"\r\n    y = x * 5\r\n\r\n", "created": "2013-10-07T15:02:24.512Z"}}, {"pk": 13, "model": "quiz.quiz", "fields": {"concept": 4, "answer": "onetwo", "last_modified": "2013-10-07T21:51:50.038Z", "question": "What's the value of *z`*?\r\n\r\n    x = \"one\"\r\n    y = \"two\"\r\n    z = x + y", "created": "2013-10-07T15:03:39.705Z"}}, {"pk": 14, "model": "quiz.quiz", "fields": {"concept": 4, "answer": "p", "last_modified": "2013-10-07T21:51:33.774Z", "question": "What's the value of *y*\r\n\r\n    x = \"a plan a man a canal panama\"\r\n    y = x[2]\r\n\r\n", "created": "2013-10-07T15:11:44.243Z"}}, {"pk": 15, "model": "quiz.quiz", "fields": {"concept": 4, "answer": "", "last_modified": "2013-10-07T21:51:21.058Z", "question": "What's the value of *y*\r\n\r\n    x = \"panama\"\r\n    y = x[0:2]\r\n", "created": "2013-10-07T15:15:06.902Z"}}, {"pk": 16, "model": "quiz.quiz", "fields": {"concept": 4, "answer": "", "last_modified": "2013-10-07T21:51:09.042Z", "question": "What's the value of *y*\r\n\r\n    x = \"panama\"\r\n    y = x[2:5]\r\n", "created": "2013-10-07T15:16:46.098Z"}}, {"pk": 17, "model": "quiz.quiz", "fields": {"concept": 4, "answer": "panama", "last_modified": "2013-10-07T21:50:54.669Z", "question": "What's the value of *y*\r\n\r\n    x = \"panama\"\r\n    y = x[:2] +  x[2:]\r\n", "created": "2013-10-07T15:22:50.976Z"}}, {"pk": 18, "model": "quiz.quiz", "fields": {"concept": 4, "answer": "", "last_modified": "2013-10-08T09:17:02.277Z", "question": "What's the value of *y*\r\n\r\n    x = \"panama\"\r\n    y = x[100]\r\n", "created": "2013-10-07T15:30:48.711Z"}}, {"pk": 19, "model": "quiz.quiz", "fields": {"concept": 4, "answer": "", "last_modified": "2013-10-08T09:18:09.329Z", "question": "    x = \"panama\"\r\n    y = x[0:100]\r\n", "created": "2013-10-07T15:31:31.703Z"}}, {"pk": 20, "model": "quiz.quiz", "fields": {"concept": 4, "answer": "6", "last_modified": "2013-10-07T21:43:42.957Z", "question": "What's the value of *z*?\r\n\r\n    x = \"panama\"\r\n    z = len(x)", "created": "2013-10-07T15:34:42.220Z"}}, {"pk": 21, "model": "quiz.quiz", "fields": {"concept": 4, "answer": "", "last_modified": "2013-10-07T15:36:28.706Z", "question": "Which of these is a unicode string literal?", "created": "2013-10-07T15:36:28.706Z"}}, {"pk": 22, "model": "quiz.quiz", "fields": {"concept": 6, "answer": "", "last_modified": "2013-10-08T20:41:04.558Z", "question": "All items in a list need to be of the same type.", "created": "2013-10-08T20:41:04.557Z"}}, {"pk": 23, "model": "quiz.quiz", "fields": {"concept": 6, "answer": "", "last_modified": "2013-10-08T20:42:40.733Z", "question": "List indices start at ______.", "created": "2013-10-08T20:42:30.375Z"}}, {"pk": 24, "model": "quiz.quiz", "fields": {"concept": 6, "answer": "", "last_modified": "2013-10-08T21:49:50.577Z", "question": "The size of a list is fixed.", "created": "2013-10-08T20:43:32.105Z"}}, {"pk": 25, "model": "quiz.quiz", "fields": {"concept": 6, "answer": "", "last_modified": "2013-10-08T20:51:28.473Z", "question": "Individual items of a list can be changed.", "created": "2013-10-08T20:47:15.423Z"}}, {"pk": 26, "model": "quiz.quiz", "fields": {"concept": 6, "answer": "4", "last_modified": "2013-10-08T20:47:22.415Z", "question": "What's the value of a\r\n\r\n    x = [0, 1, 2, 3]\r\n    x[0:2] = [4, 5]\r\n    a = x[0]", "created": "2013-10-08T20:47:22.415Z"}}, {"pk": 27, "model": "quiz.quiz", "fields": {"concept": 6, "answer": "4", "last_modified": "2013-10-08T21:50:13.100Z", "question": "What's the value of a?\r\n\r\nx = [0, 1, 2, 3]\r\na = len(x)", "created": "2013-10-08T20:47:53.781Z"}}, {"pk": 28, "model": "quiz.quiz", "fields": {"concept": 7, "answer": "", "last_modified": "2013-10-08T21:07:03.673Z", "question": "In python, statements are grouped by _______", "created": "2013-10-08T21:07:03.673Z"}}, {"pk": 29, "model": "quiz.quiz", "fields": {"concept": 7, "answer": "", "last_modified": "2013-10-08T21:16:21.749Z", "question": "What do you see on the console when the following code is run by the python interpreter?\r\n\r\n    x = \"a plan a man a canal\"\r\n    a = \"panama\"\r\n    print x, a", "created": "2013-10-08T21:16:21.749Z"}}, {"pk": 30, "model": "quiz.quiz", "fields": {"concept": 7, "answer": "", "last_modified": "2013-10-08T21:26:35.862Z", "question": "The standard comparison operators in C such as *>*, *<*,  *==* and *<=*  and the modulo operator, *%* apply to Python as well.", "created": "2013-10-08T21:20:10.398Z"}}, {"pk": 31, "model": "quiz.quiz", "fields": {"concept": 8, "answer": "120", "last_modified": "2013-10-25T08:52:12.442Z", "question": "What is printed on the console after the following code is evaluated?\r\n\r\n    a = 5\r\n    b = 1\r\n\r\n    while a > 0:\r\n        b *= a\r\n        a -= 1\r\n\r\n    print b\r\n\r\n", "created": "2013-10-08T21:24:21.023Z"}}, {"pk": 32, "model": "quiz.quiz", "fields": {"concept": 8, "answer": "", "last_modified": "2013-10-25T09:11:20.457Z", "question": "What is printed on the console after the following code is evaluated?\r\n\r\n    a = 5\r\n    if a < 0:\r\n        print \"negative\"\r\n    elif a == 0:\r\n        print \"zero\"\r\n    else:\r\n        print \"positive\"\r\n", "created": "2013-10-08T21:28:58.392Z"}}, {"pk": 33, "model": "quiz.quiz", "fields": {"concept": 8, "answer": "", "last_modified": "2013-10-08T21:31:49.656Z", "question": "What is printed on the console after the following code is evaluated?\r\n\r\n    a = 5\r\n    b = 1\r\n    for i in range(a):\r\n        b *= i\r\n\r\n    print b", "created": "2013-10-08T21:31:49.656Z"}}, {"pk": 34, "model": "quiz.quiz", "fields": {"concept": 8, "answer": "24", "last_modified": "2013-10-08T21:32:37.979Z", "question": "What is printed on the console after the following code is evaluated?\r\n\r\n    a = 5\r\n    b = 1\r\n    for i in range(1, a):\r\n        b *= i\r\n\r\n    print b", "created": "2013-10-08T21:32:37.979Z"}}, {"pk": 35, "model": "quiz.quiz", "fields": {"concept": 8, "answer": "", "last_modified": "2013-10-08T21:41:26.339Z", "question": "What's the purpose the following code?\r\n\r\n    a = 11\r\n    \r\n    for n in range(2, a):\r\n        i = 2\r\n        while i < n:\r\n            if n % i == 0:\r\n                break\r\n            i += 1\r\n        if i == n:\r\n            print n\r\n\r\n", "created": "2013-10-08T21:41:26.339Z"}}, {"pk": 36, "model": "quiz.quiz", "fields": {"concept": 8, "answer": "", "last_modified": "2013-10-08T21:46:02.908Z", "question": "The pass statement ", "created": "2013-10-08T21:45:24.832Z"}}, {"pk": 37, "model": "quiz.quiz", "fields": {"concept": 9, "answer": "", "last_modified": "2013-10-08T22:14:30.837Z", "question": "What would be an apt name for this function?\r\n\r\n    def XXXX(n):\r\n        b = 1\r\n        for i in range(1, n+1):\r\n            b *= i\r\n    \r\n        return b", "created": "2013-10-08T22:14:30.837Z"}}, {"pk": 38, "model": "quiz.quiz", "fields": {"concept": 9, "answer": "", "last_modified": "2013-10-08T22:17:15.148Z", "question": "A new scope is created for each control block in a function.", "created": "2013-10-08T22:17:15.148Z"}}, {"pk": 39, "model": "quiz.quiz", "fields": {"concept": 9, "answer": "", "last_modified": "2013-10-08T22:30:40.631Z", "question": "All variables declared in a function belong to the local scope (local symbol table).", "created": "2013-10-08T22:18:07.620Z"}}, {"pk": 40, "model": "quiz.quiz", "fields": {"concept": 9, "answer": "11", "last_modified": "2013-10-23T11:25:40.508Z", "question": "What's the value of a after the following code is run.\r\n\r\n    a = 10\r\n    def inc():\r\n        global a\r\n        a += 1\r\n\r\n", "created": "2013-10-08T22:25:36.323Z"}}, {"pk": 41, "model": "quiz.quiz", "fields": {"concept": 9, "answer": "", "last_modified": "2013-10-09T19:21:00.889Z", "question": "Arguments to a function call  are", "created": "2013-10-08T22:28:23.191Z"}}, {"pk": 42, "model": "quiz.quiz", "fields": {"concept": 9, "answer": "", "last_modified": "2013-10-09T19:17:10.028Z", "question": "What's printed on the console after the following code is run.\r\n\r\n    a = 10\r\n    def inc(a):\r\n        a += 1\r\n    \r\n    print a\r\n\r\n", "created": "2013-10-09T19:16:49.769Z"}}, {"pk": 43, "model": "quiz.quiz", "fields": {"concept": 9, "answer": "", "last_modified": "2013-10-09T19:18:37.339Z", "question": "What's the value of a after the following code is run.\r\n\r\n    a = [10]\r\n    def inc(a):\r\n        a[0] += 1\r\n    \r\n    print a[0]\r\n\r\n", "created": "2013-10-09T19:18:37.339Z"}}, {"pk": 44, "model": "quiz.quiz", "fields": {"concept": 10, "answer": "2", "last_modified": "2013-10-09T19:24:09.260Z", "question": "What is the value of *b*\r\n\r\n    def inc(a=1):\r\n        return a + 1\r\n    \r\n    b = inc()\r\n\r\n", "created": "2013-10-09T19:24:09.259Z"}}, {"pk": 45, "model": "quiz.quiz", "fields": {"concept": 10, "answer": "", "last_modified": "2013-10-09T19:31:26.688Z", "question": "What is the value of b?\r\n\r\n    def sub(one, two):\r\n        return one - two\r\n    \r\n    \r\n    b = sub(two=1, one=2)\r\n\r\n", "created": "2013-10-09T19:31:26.688Z"}}, {"pk": 46, "model": "quiz.quiz", "fields": {"concept": 10, "answer": "16", "last_modified": "2013-10-09T19:33:35.854Z", "question": "What's the value of *a*?\r\n\r\n    y = lambda x : x * x\r\n    a = y(4)", "created": "2013-10-09T19:33:35.854Z"}}, {"pk": 47, "model": "quiz.quiz", "fields": {"concept": 10, "answer": "", "last_modified": "2013-10-09T19:35:29.469Z", "question": "Lambda functions can contain multiple lines. ", "created": "2013-10-09T19:35:29.469Z"}}, {"pk": 48, "model": "quiz.quiz", "fields": {"concept": 11, "answer": "", "last_modified": "2013-12-14T21:48:05.327Z", "question": "What's the value of a after the following code is evaluated?\r\n\r\n    a = [0, 1]\r\n    \r\n    a.reverse()", "created": "2013-10-09T19:48:43.028Z"}}, {"pk": 49, "model": "quiz.quiz", "fields": {"concept": 11, "answer": "", "last_modified": "2013-10-09T19:50:22.643Z", "question": "In python, *list* is a ", "created": "2013-10-09T19:50:22.643Z"}}, {"pk": 50, "model": "quiz.quiz", "fields": {"concept": 11, "answer": "", "last_modified": "2013-10-09T19:55:32.329Z", "question": "What's the time complexity of the *list sort* method ", "created": "2013-10-09T19:55:32.329Z"}}, {"pk": 51, "model": "quiz.quiz", "fields": {"concept": 11, "answer": "", "last_modified": "2013-10-09T20:01:53.466Z", "question": "    a = [x * x for x in range(5)]\r\n\r\nWhat's *a* ?\r\n\r\n\r\n", "created": "2013-10-09T20:01:53.466Z"}}, {"pk": 52, "model": "quiz.quiz", "fields": {"concept": 13, "answer": "", "last_modified": "2013-10-09T20:32:34.692Z", "question": "A dictionary ", "created": "2013-10-09T20:07:34.661Z"}}, {"pk": 53, "model": "quiz.quiz", "fields": {"concept": 14, "answer": "", "last_modified": "2013-10-09T20:12:25.775Z", "question": "Strings, lists, dictionaries and tuples are examples of sequence data types", "created": "2013-10-09T20:10:26.325Z"}}, {"pk": 54, "model": "quiz.quiz", "fields": {"concept": 14, "answer": "in", "last_modified": "2013-10-10T20:20:18.676Z", "question": "Which key word is used to iterate over sequences?", "created": "2013-10-09T20:10:56.317Z"}}, {"pk": 55, "model": "quiz.quiz", "fields": {"concept": 14, "answer": "", "last_modified": "2013-10-10T20:20:29.846Z", "question": "Tuples are immutable.", "created": "2013-10-09T20:13:19.912Z"}}, {"pk": 56, "model": "quiz.quiz", "fields": {"concept": 13, "answer": "", "last_modified": "2013-10-09T20:15:11.362Z", "question": "Most python programmers are \"hash addicted\".", "created": "2013-10-09T20:15:11.362Z"}}, {"pk": 57, "model": "quiz.quiz", "fields": {"concept": 15, "answer": "3", "last_modified": "2013-10-09T20:20:48.308Z", "question": "What's the value of *b*\r\n\r\n    a = set( [1, 2, 2, 3] )\r\n    b = len(a)\r\n\r\n", "created": "2013-10-09T20:20:48.308Z"}}, {"pk": 58, "model": "quiz.quiz", "fields": {"concept": 13, "answer": "eggs", "last_modified": "2013-10-09T20:25:31.302Z", "question": "What's *b*\r\n\r\n    a = {\"spam\": \"eggs\"}\r\n    b = a.get(\"spam\")", "created": "2013-10-09T20:25:31.302Z"}}, {"pk": 59, "model": "quiz.quiz", "fields": {"concept": 13, "answer": "", "last_modified": "2013-10-09T20:27:06.956Z", "question": "What's *b* ?\r\n\r\n    a = {\"spam\": \"eggs\"}\r\n    b = a.get(\"eggs\")", "created": "2013-10-09T20:27:06.956Z"}}, {"pk": 60, "model": "quiz.quiz", "fields": {"concept": 13, "answer": "", "last_modified": "2013-10-09T20:33:17.609Z", "question": "What's *b* ?\r\n\r\n    a = {\"spam\": \"eggs\"}\r\n    b = a['eggs']", "created": "2013-10-09T20:28:09.274Z"}}, {"pk": 61, "model": "quiz.quiz", "fields": {"concept": 13, "answer": "0", "last_modified": "2013-10-09T20:28:44.458Z", "question": "What's *b* ?\r\n\r\n    a = {\"spam\": \"eggs\"}\r\n    b = a.get(\"eggs\", 0)", "created": "2013-10-09T20:28:44.458Z"}}, {"pk": 62, "model": "quiz.quiz", "fields": {"concept": 13, "answer": "", "last_modified": "2013-10-10T18:56:32.440Z", "question": "What's *b* ?\r\n\r\n    a = {\"spam\": \"eggs\"}\r\n    a[\"spam\"] = \"ham\"\r\n\r\n    b = a.get(\"spam\")\r\n", "created": "2013-10-09T20:32:02.447Z"}}, {"pk": 63, "model": "quiz.quiz", "fields": {"concept": 14, "answer": "", "last_modified": "2013-10-10T19:01:40.553Z", "question": "    x = (1, 2, 3)\r\n    y = (1, 2, 3)\r\n    \r\n    if x == y:\r\n        print \"equal\"\r\n    else:\r\n        print \"not equal\"\r\n\r\nWhat's printed on the console\r\n", "created": "2013-10-10T19:01:40.553Z"}}, {"pk": 64, "model": "quiz.quiz", "fields": {"concept": 14, "answer": "", "last_modified": "2013-10-10T19:02:19.555Z", "question": "    x = (1, 2, 3)\r\n    y = (1, 2, 3)\r\n    \r\n    if x is y:\r\n        print \"equal\"\r\n    else:\r\n        print \"not equal\"\r\n\r\nWhat's printed on the console\r\n", "created": "2013-10-10T19:02:19.555Z"}}, {"pk": 65, "model": "quiz.quiz", "fields": {"concept": 12, "answer": "30", "last_modified": "2013-10-10T19:11:01.001Z", "question": "    x = [i for i in range(5)]\r\n    y = lambda i: i * i\r\n    \r\n    z = sum(map(y, x))\r\n\r\nWhat's z?\r\n\r\n\r\n", "created": "2013-10-10T19:11:01.001Z"}}, {"pk": 66, "model": "quiz.quiz", "fields": {"concept": 12, "answer": "", "last_modified": "2013-10-10T19:14:11.620Z", "question": "    x = [ i for i in xrange(5)]\r\n    def is_included(i):\r\n        return i % 2 != 0\r\n    \r\n    y = filter(is_included, x)\r\n\r\nWhat's y?\r\n\r\n\r\n", "created": "2013-10-10T19:14:11.620Z"}}, {"pk": 67, "model": "quiz.quiz", "fields": {"concept": 12, "answer": "24", "last_modified": "2013-10-25T07:52:39.676Z", "question": "    x = range(1, 5)\r\n    \r\n    def multiply(a, b):\r\n        return a * b\r\n    \r\n    y = reduce(multiply, x)\r\n\r\n    \r\nWhat's y?\r\n\r\n", "created": "2013-10-10T19:19:01.850Z"}}, {"pk": 68, "model": "quiz.quiz", "fields": {"concept": 17, "answer": "", "last_modified": "2013-10-10T19:39:01.530Z", "question": "Modules and packages are used to", "created": "2013-10-10T19:39:01.530Z"}}, {"pk": 69, "model": "quiz.quiz", "fields": {"concept": 17, "answer": "", "last_modified": "2013-10-10T19:44:40.081Z", "question": "When a module, named **\"spam\"** is import into a module, named **eggs** \r\n\r\n    #inside eggs.py\r\n\r\n    import spam", "created": "2013-10-10T19:44:40.081Z"}}, {"pk": 70, "model": "quiz.quiz", "fields": {"concept": 17, "answer": "100", "last_modified": "2013-10-10T19:50:50.068Z", "question": "\r\n    #square.py\r\n    import sys\r\n    def square(x):\r\n        return x * x\r\n    \r\n    \r\n    if __name__ == \"__main__\":\r\n        print square int( sys.argv[1])\r\n\r\nWhat's printed on the console when the above code is executed as a script from the command line?\r\n\r\n    $ python square.py 10\r\n\r\n", "created": "2013-10-10T19:50:50.068Z"}}, {"pk": 71, "model": "quiz.quiz", "fields": {"concept": 17, "answer": "", "last_modified": "2013-10-10T19:53:09.943Z", "question": "    from spam import *\r\n\r\nThe above method is considered", "created": "2013-10-10T19:53:09.943Z"}}, {"pk": 72, "model": "quiz.quiz", "fields": {"concept": 17, "answer": "", "last_modified": "2013-10-10T20:20:39.857Z", "question": "The python interpreter identifies a directory as a python package", "created": "2013-10-10T19:55:31.199Z"}}, {"pk": 73, "model": "quiz.quiz", "fields": {"concept": 18, "answer": "", "last_modified": "2013-10-10T20:08:57.604Z", "question": "In python, everything is an object.", "created": "2013-10-10T20:08:57.604Z"}}, {"pk": 74, "model": "quiz.quiz", "fields": {"concept": 18, "answer": "", "last_modified": "2013-10-10T20:10:03.810Z", "question": "Python is a____ typed language.", "created": "2013-10-10T20:10:03.810Z"}}, {"pk": 75, "model": "quiz.quiz", "fields": {"concept": 18, "answer": "", "last_modified": "2013-10-10T20:10:59.862Z", "question": "Python aspires to have a one standard way to do things.", "created": "2013-10-10T20:10:59.862Z"}}, {"pk": 76, "model": "quiz.quiz", "fields": {"concept": 18, "answer": "", "last_modified": "2013-10-10T20:17:01.170Z", "question": "In python, memory is managed", "created": "2013-10-10T20:15:12.583Z"}}, {"pk": 77, "model": "quiz.quiz", "fields": {"concept": 19, "answer": "", "last_modified": "2013-10-10T20:46:02.022Z", "question": "    f = 1.1\r\n    r = repr(f)\r\n\r\nWhat's r?\r\n", "created": "2013-10-10T20:45:03.360Z"}}, {"pk": 78, "model": "quiz.quiz", "fields": {"concept": 19, "answer": "", "last_modified": "2013-10-10T20:52:11.525Z", "question": "    f = 1.1\r\n    s = str(f)\r\n\r\nWhat's s?\r\n", "created": "2013-10-10T20:45:52.586Z"}}, {"pk": 79, "model": "quiz.quiz", "fields": {"concept": 19, "answer": "spam and eggs", "last_modified": "2013-10-10T20:47:37.336Z", "question": "    s = \"{} and {}\".format(\"spam\", \"eggs\")\r\n\r\nWhat's *s*?\r\n\r\n", "created": "2013-10-10T20:47:37.336Z"}}, {"pk": 80, "model": "quiz.quiz", "fields": {"concept": 19, "answer": "", "last_modified": "2013-10-10T20:51:18.844Z", "question": "Objects serialized using the *pickle* module can be directly deserialized in other languages.", "created": "2013-10-10T20:51:18.844Z"}}, {"pk": 81, "model": "quiz.quiz", "fields": {"concept": 18, "answer": "", "last_modified": "2013-12-14T19:33:41.829Z", "question": "Which of these statements are part of The Zen of Python. Select all that apply.", "created": "2013-12-12T02:32:09.933Z"}}, {"pk": 82, "model": "quiz.quiz", "fields": {"concept": 16, "answer": "", "last_modified": "2013-12-13T18:18:30.568Z", "question": "    a = range(5)\r\n    del a[0:2]\r\n\r\nWhat's `a` after the above statements are executed?\r\n", "created": "2013-12-12T02:50:14.007Z"}}, {"pk": 84, "model": "quiz.quiz", "fields": {"concept": 16, "answer": "", "last_modified": "2013-12-13T18:22:33.419Z", "question": "When *del* is called on an object,", "created": "2013-12-12T02:55:41.206Z"}}, {"pk": 85, "model": "quiz.quiz", "fields": {"concept": 19, "answer": "1 and 2", "last_modified": "2013-12-12T17:45:53.007Z", "question": "What's printed on the console?\r\n\r\n    x = \"{} and {}\".format(1, 2)\r\n    print x\r\n", "created": "2013-12-12T17:45:05.902Z"}}, {"pk": 86, "model": "quiz.quiz", "fields": {"concept": 19, "answer": "1 and 2", "last_modified": "2013-12-12T17:46:25.320Z", "question": "What's printed on the console?\r\n\r\n    x = \"{a} and {b}\".format(a=1, b=2)\r\n    print x \r\n\r\n", "created": "2013-12-12T17:46:25.320Z"}}, {"pk": 87, "model": "quiz.quiz", "fields": {"concept": 19, "answer": "2 and 1", "last_modified": "2013-12-12T17:47:58.531Z", "question": "What's printed on the console\r\n\r\n    d = {\"a\": 2, \"b\": 1}\r\n    x = \"{a} and {b}\".format(**d)", "created": "2013-12-12T17:47:58.531Z"}}, {"pk": 88, "model": "quiz.quiz", "fields": {"concept": 20, "answer": "1", "last_modified": "2013-12-12T17:58:18.028Z", "question": "What's x?\r\n\r\n    def add(a, b):\r\n        return a + b\r\n    \r\n    x = add( *range(2) )\r\n", "created": "2013-12-12T17:58:18.028Z"}}, {"pk": 89, "model": "quiz.quiz", "fields": {"concept": 20, "answer": "1", "last_modified": "2013-12-12T18:00:38.708Z", "question": "    def diff(a, b):\r\n        return a - b\r\n    \r\n    x = diff(b=1, a=2)\r\n\r\nWhat's x?\r\n\r\n", "created": "2013-12-12T18:00:38.708Z"}}, {"pk": 90, "model": "quiz.quiz", "fields": {"concept": 20, "answer": "15", "last_modified": "2013-12-12T18:09:55.084Z", "question": "    def add(a, *args, **kwargs):\r\n        result = a\r\n        result  += sum(args)\r\n        for key, value in kwargs.items():\r\n            result += value\r\n        return result\r\n\r\n    x = add(1, *range(2, 4), four=4, five=5)\r\n   \r\nWhat's x?\r\n\r\n", "created": "2013-12-12T18:06:30.588Z"}}, {"pk": 91, "model": "quiz.quiz", "fields": {"concept": 16, "answer": "", "last_modified": "2013-12-13T18:24:45.640Z", "question": "    b = [1, 2, 3]\r\n    a = b\r\n    del a \r\n    print sum(b)\r\n\r\nWhat's printed on the console?\r\n", "created": "2013-12-13T18:24:45.640Z"}}, {"pk": 92, "model": "quiz.quiz", "fields": {"concept": 19, "answer": "cd", "last_modified": "2013-12-16T17:56:00.296Z", "question": "What's `x`?\r\n\r\n    path = \"spam.txt\"\r\n    \r\n    f = open(path, \"w\")\r\n    f.write(\"abcd\")\r\n    f.close()\r\n    \r\n    f = open(path, \"r\")\r\n    f.seek(2)\r\n    x = f.read()\r\n\r\n\r\n", "created": "2013-12-16T17:56:00.296Z"}}, {"pk": 93, "model": "quiz.quiz", "fields": {"concept": 19, "answer": "", "last_modified": "2013-12-16T17:58:32.446Z", "question": "\r\nWhat's `is_closed`?with open(\"spam.txt\", \"w\") as f:\r\n    f.write(\"eggs\")\r\n\r\nis_closed = f.closed", "created": "2013-12-16T17:58:32.446Z"}}, {"pk": 94, "model": "quiz.quiz", "fields": {"concept": 21, "answer": "", "last_modified": "2013-12-16T18:03:24.382Z", "question": "factorial = 1\r\nfor i in range(1, 4)\r\n    factorial *= i\r\n\r\nWhat's the value of `factorial`?", "created": "2013-12-16T18:03:24.382Z"}}, {"pk": 95, "model": "quiz.quiz", "fields": {"concept": 21, "answer": "6", "last_modified": "2013-12-16T18:17:00.862Z", "question": "    def magic(counter, n):\r\n        counter['count'] = 0\r\n        while True:\r\n            if counter['count'] > n:\r\n                raise StopIteration\r\n            counter['count'] += 1\r\n    \r\n    \r\n    def do_magic():\r\n        counter = {}\r\n        try:\r\n            magic(counter, 5)\r\n        except StopIteration:\r\n            pass\r\n        return counter['count']\r\n    \r\n    x = do_magic()\r\n\r\nWhat's `x`?\r\n        \r\n          \r\n\r\n    \r\n\r\n", "created": "2013-12-16T18:17:00.862Z"}}, {"pk": 96, "model": "quiz.quiz", "fields": {"concept": 21, "answer": "", "last_modified": "2013-12-16T18:20:04.228Z", "question": "The *finally* in a try statement is executed", "created": "2013-12-16T18:20:04.228Z"}}, {"pk": 97, "model": "quiz.quiz", "fields": {"concept": 19, "answer": "", "last_modified": "2013-12-16T18:23:11.807Z", "question": "Using the *with* statement to open a file", "created": "2013-12-16T18:23:11.807Z"}}, {"pk": 98, "model": "quiz.quiz", "fields": {"concept": 22, "answer": "", "last_modified": "2013-12-16T18:59:49.527Z", "question": "    #Code intentionally convoluted to test your understanding.\r\n    #Use better variable names in your code.\r\n    def spam(it):\r\n    \tdef sum(it):\r\n    \t    sum = 0\r\n    \t    for i in it:\r\n    \t        sum -= i\r\n    \t    return sum\r\n    \t\r\n    \treturn sum(it)\r\n    \r\n    \r\n    data = range(1, 4)\r\n    a = sum(data)\r\n    b = spam(data)\r\n    \r\n    print a, b\r\n\r\nWhat are `a` and `b`?\r\n\r\n", "created": "2013-12-16T18:59:49.527Z"}}, {"pk": 99, "model": "quiz.quiz", "fields": {"concept": 22, "answer": "", "last_modified": "2013-12-16T19:28:00.009Z", "question": "The namespace containing builitin functions is automatically created by the interpreter when it starts up.", "created": "2013-12-16T19:09:48.176Z"}}, {"pk": 100, "model": "quiz.quiz", "fields": {"concept": 23, "answer": "one", "last_modified": "2013-12-16T19:43:38.769Z", "question": "    class Person(object):\r\n        def __init__(self, name):\r\n            self.name = name \r\n    \r\n    \r\n    p = Person(\"one\")\r\n    print p.name\r\n\r\nWhat's printed on the console? \r\n\r\n", "created": "2013-12-16T19:43:38.769Z"}}, {"pk": 101, "model": "quiz.quiz", "fields": {"concept": 23, "answer": "", "last_modified": "2013-12-16T19:46:14.270Z", "question": "    class Person(object):\r\n        def __init__(self, name):\r\n            self.name = name \r\n    \r\n    \r\n    p = Person(\"one\")\r\n    p.age = 1\r\n\r\n\r\nWhat's `p.age`", "created": "2013-12-16T19:46:14.270Z"}}, {"pk": 102, "model": "quiz.quiz", "fields": {"concept": 23, "answer": "Spam", "last_modified": "2013-12-16T19:57:48.190Z", "question": "    class Person(object):\r\n    \tdef __init__(self, name):\r\n    \t\tself.name = name\r\n    \tdef capitalize_name(self):\r\n    \t\treturn self.name[0].upper() + self.name[1:]\r\n    \r\n    \r\n    \r\n    p = Person(name=\"spam\")\r\n    in_caps = p.capitalize_name\r\n    name = in_caps()\r\n\r\nWhat's `name`?\r\n\r\n", "created": "2013-12-16T19:57:48.190Z"}}, {"pk": 103, "model": "quiz.quiz", "fields": {"concept": 23, "answer": "", "last_modified": "2013-12-16T20:02:43.560Z", "question": "    class Person(object):\r\n    \tdef __init__(this, name):\r\n    \t\tthis.name = name\r\n    \tdef capitalize_name(self):\r\n    \t\treturn self.name[0].upper() + self.name[1:]\r\n    \r\n    \r\n    \r\n    p = Person(name=\"spam\")\r\n\r\n\r\nIs the above code valid?", "created": "2013-12-16T20:02:43.560Z"}}, {"pk": 1, "model": "quiz.choice", "fields": {"text": "//", "is_correct": false, "quiz": 1}}, {"pk": 2, "model": "quiz.choice", "fields": {"text": "/*", "is_correct": false, "quiz": 1}}, {"pk": 3, "model": "quiz.choice", "fields": {"text": "#", "is_correct": true, "quiz": 1}}, {"pk": 4, "model": "quiz.choice", "fields": {"text": "This expression is invalid.", "is_correct": false, "quiz": 5}}, {"pk": 5, "model": "quiz.choice", "fields": {"text": "x is 0, y is 0, z is 100", "is_correct": false, "quiz": 5}}, {"pk": 6, "model": "quiz.choice", "fields": {"text": "x is 100, y is 100, z is 100", "is_correct": true, "quiz": 5}}, {"pk": 7, "model": "quiz.choice", "fields": {"text": "a is 1, b is 2", "is_correct": false, "quiz": 6}}, {"pk": 8, "model": "quiz.choice", "fields": {"text": "a is 2, b is 1", "is_correct": true, "quiz": 6}}, {"pk": 9, "model": "quiz.choice", "fields": {"text": "Yes", "is_correct": true, "quiz": 7}}, {"pk": 10, "model": "quiz.choice", "fields": {"text": "No", "is_correct": false, "quiz": 7}}, {"pk": 11, "model": "quiz.choice", "fields": {"text": "Single Quotes", "is_correct": true, "quiz": 10}}, {"pk": 12, "model": "quiz.choice", "fields": {"text": "Double Quotes", "is_correct": true, "quiz": 10}}, {"pk": 13, "model": "quiz.choice", "fields": {"text": "Triple Quotes", "is_correct": true, "quiz": 10}}, {"pk": 14, "model": "quiz.choice", "fields": {"text": "Single Quotes", "is_correct": false, "quiz": 11}}, {"pk": 15, "model": "quiz.choice", "fields": {"text": "Double Quotes", "is_correct": false, "quiz": 11}}, {"pk": 16, "model": "quiz.choice", "fields": {"text": "Triple Quotes", "is_correct": true, "quiz": 11}}, {"pk": 17, "model": "quiz.choice", "fields": {"text": "Single, double or triple quotes with with a backslash as the last character on the line", "is_correct": true, "quiz": 11}}, {"pk": 18, "model": "quiz.choice", "fields": {"text": "pan", "is_correct": false, "quiz": 15}}, {"pk": 19, "model": "quiz.choice", "fields": {"text": "pa", "is_correct": true, "quiz": 15}}, {"pk": 20, "model": "quiz.choice", "fields": {"text": "pana", "is_correct": false, "quiz": 15}}, {"pk": 21, "model": "quiz.choice", "fields": {"text": "p", "is_correct": false, "quiz": 15}}, {"pk": 22, "model": "quiz.choice", "fields": {"text": "nam", "is_correct": true, "quiz": 16}}, {"pk": 23, "model": "quiz.choice", "fields": {"text": "na", "is_correct": false, "quiz": 16}}, {"pk": 24, "model": "quiz.choice", "fields": {"text": "nama", "is_correct": false, "quiz": 16}}, {"pk": 25, "model": "quiz.choice", "fields": {"text": "panama", "is_correct": false, "quiz": 18}}, {"pk": 26, "model": "quiz.choice", "fields": {"text": "An IndexError is thrown", "is_correct": true, "quiz": 18}}, {"pk": 27, "model": "quiz.choice", "fields": {"text": "panama", "is_correct": true, "quiz": 19}}, {"pk": 28, "model": "quiz.choice", "fields": {"text": "u'panama'", "is_correct": true, "quiz": 21}}, {"pk": 29, "model": "quiz.choice", "fields": {"text": "r'panama'", "is_correct": false, "quiz": 21}}, {"pk": 30, "model": "quiz.choice", "fields": {"text": "'panama'", "is_correct": false, "quiz": 21}}, {"pk": 31, "model": "quiz.choice", "fields": {"text": "An IndexError is thrown", "is_correct": false, "quiz": 19}}, {"pk": 32, "model": "quiz.choice", "fields": {"text": "Yes", "is_correct": false, "quiz": 22}}, {"pk": 33, "model": "quiz.choice", "fields": {"text": "No", "is_correct": true, "quiz": 22}}, {"pk": 34, "model": "quiz.choice", "fields": {"text": "0", "is_correct": true, "quiz": 23}}, {"pk": 35, "model": "quiz.choice", "fields": {"text": "1", "is_correct": false, "quiz": 23}}, {"pk": 36, "model": "quiz.choice", "fields": {"text": "Yes", "is_correct": false, "quiz": 24}}, {"pk": 37, "model": "quiz.choice", "fields": {"text": "No", "is_correct": true, "quiz": 24}}, {"pk": 38, "model": "quiz.choice", "fields": {"text": "Yes", "is_correct": true, "quiz": 25}}, {"pk": 39, "model": "quiz.choice", "fields": {"text": "No", "is_correct": false, "quiz": 25}}, {"pk": 40, "model": "quiz.choice", "fields": {"text": "Braces", "is_correct": false, "quiz": 28}}, {"pk": 41, "model": "quiz.choice", "fields": {"text": "Indentation", "is_correct": true, "quiz": 28}}, {"pk": 42, "model": "quiz.choice", "fields": {"text": "a plan a man a canalpanama", "is_correct": false, "quiz": 29}}, {"pk": 43, "model": "quiz.choice", "fields": {"text": "a plan a man a canal panama", "is_correct": true, "quiz": 29}}, {"pk": 44, "model": "quiz.choice", "fields": {"text": "Yes", "is_correct": true, "quiz": 30}}, {"pk": 45, "model": "quiz.choice", "fields": {"text": "No", "is_correct": false, "quiz": 30}}, {"pk": 46, "model": "quiz.choice", "fields": {"text": "negative", "is_correct": false, "quiz": 32}}, {"pk": 47, "model": "quiz.choice", "fields": {"text": "zero", "is_correct": false, "quiz": 32}}, {"pk": 48, "model": "quiz.choice", "fields": {"text": "positive", "is_correct": true, "quiz": 32}}, {"pk": 49, "model": "quiz.choice", "fields": {"text": "120", "is_correct": false, "quiz": 33}}, {"pk": 50, "model": "quiz.choice", "fields": {"text": "24", "is_correct": false, "quiz": 33}}, {"pk": 51, "model": "quiz.choice", "fields": {"text": "0", "is_correct": true, "quiz": 33}}, {"pk": 52, "model": "quiz.choice", "fields": {"text": "To print all the composite numbers between 2 and 10", "is_correct": false, "quiz": 35}}, {"pk": 53, "model": "quiz.choice", "fields": {"text": "To print all the prime numbers between 2 and 10", "is_correct": true, "quiz": 35}}, {"pk": 54, "model": "quiz.choice", "fields": {"text": "Does nothing", "is_correct": true, "quiz": 36}}, {"pk": 55, "model": "quiz.choice", "fields": {"text": "Is used as a placeholder when creating new functions", "is_correct": true, "quiz": 36}}, {"pk": 56, "model": "quiz.choice", "fields": {"text": "Used to create minimal classes", "is_correct": true, "quiz": 36}}, {"pk": 57, "model": "quiz.choice", "fields": {"text": "No action needs to be taken in a control block", "is_correct": true, "quiz": 36}}, {"pk": 58, "model": "quiz.choice", "fields": {"text": "prime", "is_correct": false, "quiz": 37}}, {"pk": 59, "model": "quiz.choice", "fields": {"text": "factorial", "is_correct": true, "quiz": 37}}, {"pk": 60, "model": "quiz.choice", "fields": {"text": "fibonacci", "is_correct": false, "quiz": 37}}, {"pk": 61, "model": "quiz.choice", "fields": {"text": "Yes", "is_correct": false, "quiz": 38}}, {"pk": 62, "model": "quiz.choice", "fields": {"text": "No", "is_correct": true, "quiz": 38}}, {"pk": 63, "model": "quiz.choice", "fields": {"text": "Yes", "is_correct": true, "quiz": 39}}, {"pk": 64, "model": "quiz.choice", "fields": {"text": "No", "is_correct": false, "quiz": 39}}, {"pk": 65, "model": "quiz.choice", "fields": {"text": "Passed by reference", "is_correct": false, "quiz": 41}}, {"pk": 66, "model": "quiz.choice", "fields": {"text": "call by object reference", "is_correct": true, "quiz": 41}}, {"pk": 67, "model": "quiz.choice", "fields": {"text": "11", "is_correct": false, "quiz": 42}}, {"pk": 68, "model": "quiz.choice", "fields": {"text": "10", "is_correct": true, "quiz": 42}}, {"pk": 69, "model": "quiz.choice", "fields": {"text": "11", "is_correct": true, "quiz": 43}}, {"pk": 70, "model": "quiz.choice", "fields": {"text": "10", "is_correct": false, "quiz": 43}}, {"pk": 71, "model": "quiz.choice", "fields": {"text": "-1", "is_correct": false, "quiz": 45}}, {"pk": 72, "model": "quiz.choice", "fields": {"text": "1", "is_correct": true, "quiz": 45}}, {"pk": 73, "model": "quiz.choice", "fields": {"text": "Yes", "is_correct": false, "quiz": 47}}, {"pk": 74, "model": "quiz.choice", "fields": {"text": "No", "is_correct": true, "quiz": 47}}, {"pk": 75, "model": "quiz.choice", "fields": {"text": "[0, 1]", "is_correct": false, "quiz": 48}}, {"pk": 76, "model": "quiz.choice", "fields": {"text": "[1, 0]", "is_correct": true, "quiz": 48}}, {"pk": 77, "model": "quiz.choice", "fields": {"text": "Linked List", "is_correct": false, "quiz": 49}}, {"pk": 78, "model": "quiz.choice", "fields": {"text": "Dynamic array", "is_correct": true, "quiz": 49}}, {"pk": 79, "model": "quiz.choice", "fields": {"text": "Fixed-Length array", "is_correct": false, "quiz": 49}}, {"pk": 80, "model": "quiz.choice", "fields": {"text": "O(n^2)", "is_correct": false, "quiz": 50}}, {"pk": 81, "model": "quiz.choice", "fields": {"text": "O(nlogn)", "is_correct": true, "quiz": 50}}, {"pk": 82, "model": "quiz.choice", "fields": {"text": "O(n^3)", "is_correct": false, "quiz": 50}}, {"pk": 83, "model": "quiz.choice", "fields": {"text": "O(n)", "is_correct": false, "quiz": 50}}, {"pk": 84, "model": "quiz.choice", "fields": {"text": "[0, 1, 2, 3, 4, 5]", "is_correct": false, "quiz": 51}}, {"pk": 85, "model": "quiz.choice", "fields": {"text": "[0, 1, 4, 9, 16, 25]", "is_correct": false, "quiz": 51}}, {"pk": 86, "model": "quiz.choice", "fields": {"text": "[0, 1, 2, 3, 4]", "is_correct": false, "quiz": 51}}, {"pk": 87, "model": "quiz.choice", "fields": {"text": "[0, 1, 4, 9, 16]", "is_correct": true, "quiz": 51}}, {"pk": 88, "model": "quiz.choice", "fields": {"text": "is an associative array", "is_correct": true, "quiz": 52}}, {"pk": 89, "model": "quiz.choice", "fields": {"text": "can contain keys and values of multiple types", "is_correct": true, "quiz": 52}}, {"pk": 90, "model": "quiz.choice", "fields": {"text": "Yes", "is_correct": true, "quiz": 53}}, {"pk": 91, "model": "quiz.choice", "fields": {"text": "No", "is_correct": false, "quiz": 53}}, {"pk": 92, "model": "quiz.choice", "fields": {"text": "Yes", "is_correct": true, "quiz": 55}}, {"pk": 93, "model": "quiz.choice", "fields": {"text": "No", "is_correct": false, "quiz": 55}}, {"pk": 94, "model": "quiz.choice", "fields": {"text": "Yes", "is_correct": true, "quiz": 56}}, {"pk": 95, "model": "quiz.choice", "fields": {"text": "No", "is_correct": false, "quiz": 56}}, {"pk": 96, "model": "quiz.choice", "fields": {"text": "None", "is_correct": true, "quiz": 59}}, {"pk": 97, "model": "quiz.choice", "fields": {"text": "0", "is_correct": false, "quiz": 59}}, {"pk": 98, "model": "quiz.choice", "fields": {"text": "eggs", "is_correct": false, "quiz": 59}}, {"pk": 99, "model": "quiz.choice", "fields": {"text": "spam", "is_correct": false, "quiz": 59}}, {"pk": 100, "model": "quiz.choice", "fields": {"text": "None", "is_correct": false, "quiz": 60}}, {"pk": 101, "model": "quiz.choice", "fields": {"text": "0", "is_correct": false, "quiz": 60}}, {"pk": 102, "model": "quiz.choice", "fields": {"text": "spam", "is_correct": false, "quiz": 60}}, {"pk": 103, "model": "quiz.choice", "fields": {"text": "A KeyError occurs", "is_correct": true, "quiz": 60}}, {"pk": 104, "model": "quiz.choice", "fields": {"text": "None", "is_correct": false, "quiz": 62}}, {"pk": 105, "model": "quiz.choice", "fields": {"text": "[\"ham\", \"eggs\"]", "is_correct": false, "quiz": 62}}, {"pk": 106, "model": "quiz.choice", "fields": {"text": "\"ham\"", "is_correct": true, "quiz": 62}}, {"pk": 107, "model": "quiz.choice", "fields": {"text": "equal", "is_correct": true, "quiz": 63}}, {"pk": 108, "model": "quiz.choice", "fields": {"text": "not equal", "is_correct": false, "quiz": 63}}, {"pk": 109, "model": "quiz.choice", "fields": {"text": "equal", "is_correct": false, "quiz": 64}}, {"pk": 110, "model": "quiz.choice", "fields": {"text": "not equal", "is_correct": true, "quiz": 64}}, {"pk": 111, "model": "quiz.choice", "fields": {"text": "[1, 3]", "is_correct": true, "quiz": 66}}, {"pk": 112, "model": "quiz.choice", "fields": {"text": "[1, 3, 5]", "is_correct": false, "quiz": 66}}, {"pk": 113, "model": "quiz.choice", "fields": {"text": "[0, 2]", "is_correct": false, "quiz": 66}}, {"pk": 114, "model": "quiz.choice", "fields": {"text": "[0, 2, 4]", "is_correct": false, "quiz": 66}}, {"pk": 115, "model": "quiz.choice", "fields": {"text": "Separate functions into logical directories and files", "is_correct": true, "quiz": 68}}, {"pk": 116, "model": "quiz.choice", "fields": {"text": "Make available libraries via the import statement", "is_correct": true, "quiz": 68}}, {"pk": 117, "model": "quiz.choice", "fields": {"text": "All the symbols in the global namespace of spam are now accessible from eggs", "is_correct": true, "quiz": 69}}, {"pk": 118, "model": "quiz.choice", "fields": {"text": "All the local variables in eggs are accessible from eggs", "is_correct": false, "quiz": 69}}, {"pk": 119, "model": "quiz.choice", "fields": {"text": "good practice", "is_correct": false, "quiz": 71}}, {"pk": 120, "model": "quiz.choice", "fields": {"text": "bad practice", "is_correct": true, "quiz": 71}}, {"pk": 121, "model": "quiz.choice", "fields": {"text": "by the presence of .py files in the directory", "is_correct": false, "quiz": 72}}, {"pk": 122, "model": "quiz.choice", "fields": {"text": "by the presence of the __init__.py file", "is_correct": true, "quiz": 72}}, {"pk": 123, "model": "quiz.choice", "fields": {"text": "All subfolders in the PYTHONPATH are python packages", "is_correct": false, "quiz": 72}}, {"pk": 124, "model": "quiz.choice", "fields": {"text": "Yes", "is_correct": true, "quiz": 73}}, {"pk": 125, "model": "quiz.choice", "fields": {"text": "No", "is_correct": false, "quiz": 73}}, {"pk": 126, "model": "quiz.choice", "fields": {"text": "statically", "is_correct": false, "quiz": 74}}, {"pk": 127, "model": "quiz.choice", "fields": {"text": "dynamically", "is_correct": true, "quiz": 74}}, {"pk": 128, "model": "quiz.choice", "fields": {"text": "strongly", "is_correct": true, "quiz": 74}}, {"pk": 129, "model": "quiz.choice", "fields": {"text": "weakly", "is_correct": false, "quiz": 74}}, {"pk": 130, "model": "quiz.choice", "fields": {"text": "Yes", "is_correct": true, "quiz": 75}}, {"pk": 131, "model": "quiz.choice", "fields": {"text": "No", "is_correct": false, "quiz": 75}}, {"pk": 132, "model": "quiz.choice", "fields": {"text": "under the hood through garbage collection", "is_correct": true, "quiz": 76}}, {"pk": 133, "model": "quiz.choice", "fields": {"text": "by the application programmer by calling del on all unused references to objects", "is_correct": false, "quiz": 76}}, {"pk": 134, "model": "quiz.choice", "fields": {"text": "\"1.1\"", "is_correct": false, "quiz": 77}}, {"pk": 135, "model": "quiz.choice", "fields": {"text": "1.1", "is_correct": true, "quiz": 77}}, {"pk": 136, "model": "quiz.choice", "fields": {"text": "\"1.1\"", "is_correct": true, "quiz": 78}}, {"pk": 137, "model": "quiz.choice", "fields": {"text": "1.1", "is_correct": false, "quiz": 78}}, {"pk": 138, "model": "quiz.choice", "fields": {"text": "Yes", "is_correct": false, "quiz": 80}}, {"pk": 139, "model": "quiz.choice", "fields": {"text": "No", "is_correct": true, "quiz": 80}}, {"pk": 140, "model": "quiz.choice", "fields": {"text": "[2, 3, 4]", "is_correct": true, "quiz": 82}}, {"pk": 141, "model": "quiz.choice", "fields": {"text": "[1, 2, 3]", "is_correct": false, "quiz": 82}}, {"pk": 142, "model": "quiz.choice", "fields": {"text": "[2, 3]", "is_correct": false, "quiz": 82}}, {"pk": 143, "model": "quiz.choice", "fields": {"text": "You can't delete a slice of the list.", "is_correct": false, "quiz": 82}}, {"pk": 144, "model": "quiz.choice", "fields": {"text": "The object is immediately freed from memory.", "is_correct": false, "quiz": 84}}, {"pk": 145, "model": "quiz.choice", "fields": {"text": "The behavior depends on the runtime. The object need not be immediately freed from memory.", "is_correct": true, "quiz": 84}}, {"pk": 146, "model": "quiz.choice", "fields": {"text": "6", "is_correct": true, "quiz": 91}}, {"pk": 147, "model": "quiz.choice", "fields": {"text": "The list is deleted. So a \"NoneType object is not iterable error\" is thrown.", "is_correct": false, "quiz": 91}}, {"pk": 148, "model": "quiz.choice", "fields": {"text": "Beautiful is better than ugly.\r\n", "is_correct": true, "quiz": 81}}, {"pk": 149, "model": "quiz.choice", "fields": {"text": "Nested is better than flat.\r\n\r\n", "is_correct": false, "quiz": 81}}, {"pk": 150, "model": "quiz.choice", "fields": {"text": "Now is better than never.\r\n", "is_correct": true, "quiz": 81}}, {"pk": 151, "model": "quiz.choice", "fields": {"text": "Errors should never pass silently.\r\n", "is_correct": true, "quiz": 81}}, {"pk": 152, "model": "quiz.choice", "fields": {"text": "Readability counts.\r\n", "is_correct": true, "quiz": 81}}, {"pk": 153, "model": "quiz.choice", "fields": {"text": "True", "is_correct": true, "quiz": 93}}, {"pk": 154, "model": "quiz.choice", "fields": {"text": "False", "is_correct": false, "quiz": 93}}, {"pk": 155, "model": "quiz.choice", "fields": {"text": "24", "is_correct": false, "quiz": 94}}, {"pk": 156, "model": "quiz.choice", "fields": {"text": "6", "is_correct": false, "quiz": 94}}, {"pk": 157, "model": "quiz.choice", "fields": {"text": "A \"SyntaxError: invalid syntax\" is detected for the missing \":\" in the for statement.\r\n", "is_correct": true, "quiz": 94}}, {"pk": 158, "model": "quiz.choice", "fields": {"text": "only if no exception is raised.", "is_correct": false, "quiz": 96}}, {"pk": 159, "model": "quiz.choice", "fields": {"text": "under all circumstances", "is_correct": true, "quiz": 96}}, {"pk": 160, "model": "quiz.choice", "fields": {"text": "is considered a bad practice.", "is_correct": false, "quiz": 97}}, {"pk": 161, "model": "quiz.choice", "fields": {"text": "ensures that the file is closed promptly at the end of the with block, hence a good practice.", "is_correct": true, "quiz": 97}}, {"pk": 162, "model": "quiz.choice", "fields": {"text": "a is -6, b is -6", "is_correct": false, "quiz": 98}}, {"pk": 163, "model": "quiz.choice", "fields": {"text": "a is 6, b is -6", "is_correct": true, "quiz": 98}}, {"pk": 164, "model": "quiz.choice", "fields": {"text": "a is -6, b is 6", "is_correct": false, "quiz": 98}}, {"pk": 165, "model": "quiz.choice", "fields": {"text": "a is 6, b is 6", "is_correct": false, "quiz": 98}}, {"pk": 166, "model": "quiz.choice", "fields": {"text": "Yes.", "is_correct": true, "quiz": 99}}, {"pk": 167, "model": "quiz.choice", "fields": {"text": "No. ", "is_correct": false, "quiz": 99}}, {"pk": 168, "model": "quiz.choice", "fields": {"text": "An AttributeError is raised. You can't create the \"age\" attribute after the Person object is created.", "is_correct": false, "quiz": 101}}, {"pk": 169, "model": "quiz.choice", "fields": {"text": "1", "is_correct": true, "quiz": 101}}, {"pk": 170, "model": "quiz.choice", "fields": {"text": "No, the __init__ method need its first argument to be named \"self\"", "is_correct": false, "quiz": 103}}, {"pk": 171, "model": "quiz.choice", "fields": {"text": "Yes, instance methods always have the first argument as the instance itself, which is named \"self\" by convention.\r\nBut the first argument can be named differently.", "is_correct": true, "quiz": 103}}, {"pk": 1, "model": "auth.permission", "fields": {"codename": "add_logentry", "name": "Can add log entry", "content_type": 1}}, {"pk": 2, "model": "auth.permission", "fields": {"codename": "change_logentry", "name": "Can change log entry", "content_type": 1}}, {"pk": 3, "model": "auth.permission", "fields": {"codename": "delete_logentry", "name": "Can delete log entry", "content_type": 1}}, {"pk": 4, "model": "auth.permission", "fields": {"codename": "add_permission", "name": "Can add permission", "content_type": 2}}, {"pk": 5, "model": "auth.permission", "fields": {"codename": "change_permission", "name": "Can change permission", "content_type": 2}}, {"pk": 6, "model": "auth.permission", "fields": {"codename": "delete_permission", "name": "Can delete permission", "content_type": 2}}, {"pk": 7, "model": "auth.permission", "fields": {"codename": "add_group", "name": "Can add group", "content_type": 3}}, {"pk": 8, "model": "auth.permission", "fields": {"codename": "change_group", "name": "Can change group", "content_type": 3}}, {"pk": 9, "model": "auth.permission", "fields": {"codename": "delete_group", "name": "Can delete group", "content_type": 3}}, {"pk": 10, "model": "auth.permission", "fields": {"codename": "add_user", "name": "Can add user", "content_type": 4}}, {"pk": 11, "model": "auth.permission", "fields": {"codename": "change_user", "name": "Can change user", "content_type": 4}}, {"pk": 12, "model": "auth.permission", "fields": {"codename": "delete_user", "name": "Can delete user", "content_type": 4}}, {"pk": 13, "model": "auth.permission", "fields": {"codename": "add_contenttype", "name": "Can add content type", "content_type": 5}}, {"pk": 14, "model": "auth.permission", "fields": {"codename": "change_contenttype", "name": "Can change content type", "content_type": 5}}, {"pk": 15, "model": "auth.permission", "fields": {"codename": "delete_contenttype", "name": "Can delete content type", "content_type": 5}}, {"pk": 16, "model": "auth.permission", "fields": {"codename": "add_session", "name": "Can add session", "content_type": 6}}, {"pk": 17, "model": "auth.permission", "fields": {"codename": "change_session", "name": "Can change session", "content_type": 6}}, {"pk": 18, "model": "auth.permission", "fields": {"codename": "delete_session", "name": "Can delete session", "content_type": 6}}, {"pk": 19, "model": "auth.permission", "fields": {"codename": "add_topic", "name": "Can add topic", "content_type": 7}}, {"pk": 20, "model": "auth.permission", "fields": {"codename": "change_topic", "name": "Can change topic", "content_type": 7}}, {"pk": 21, "model": "auth.permission", "fields": {"codename": "delete_topic", "name": "Can delete topic", "content_type": 7}}, {"pk": 22, "model": "auth.permission", "fields": {"codename": "add_concept", "name": "Can add concept", "content_type": 8}}, {"pk": 23, "model": "auth.permission", "fields": {"codename": "change_concept", "name": "Can change concept", "content_type": 8}}, {"pk": 24, "model": "auth.permission", "fields": {"codename": "delete_concept", "name": "Can delete concept", "content_type": 8}}, {"pk": 25, "model": "auth.permission", "fields": {"codename": "add_conceptresource", "name": "Can add concept resource", "content_type": 9}}, {"pk": 26, "model": "auth.permission", "fields": {"codename": "change_conceptresource", "name": "Can change concept resource", "content_type": 9}}, {"pk": 27, "model": "auth.permission", "fields": {"codename": "delete_conceptresource", "name": "Can delete concept resource", "content_type": 9}}, {"pk": 28, "model": "auth.permission", "fields": {"codename": "add_conceptrelationship", "name": "Can add concept relationship", "content_type": 10}}, {"pk": 29, "model": "auth.permission", "fields": {"codename": "change_conceptrelationship", "name": "Can change concept relationship", "content_type": 10}}, {"pk": 30, "model": "auth.permission", "fields": {"codename": "delete_conceptrelationship", "name": "Can delete concept relationship", "content_type": 10}}, {"pk": 31, "model": "auth.permission", "fields": {"codename": "add_quiz", "name": "Can add quiz", "content_type": 11}}, {"pk": 32, "model": "auth.permission", "fields": {"codename": "change_quiz", "name": "Can change quiz", "content_type": 11}}, {"pk": 33, "model": "auth.permission", "fields": {"codename": "delete_quiz", "name": "Can delete quiz", "content_type": 11}}, {"pk": 34, "model": "auth.permission", "fields": {"codename": "add_choice", "name": "Can add choice", "content_type": 12}}, {"pk": 35, "model": "auth.permission", "fields": {"codename": "change_choice", "name": "Can change choice", "content_type": 12}}, {"pk": 36, "model": "auth.permission", "fields": {"codename": "delete_choice", "name": "Can delete choice", "content_type": 12}}, {"pk": 37, "model": "auth.permission", "fields": {"codename": "add_quizattempt", "name": "Can add quiz attempt", "content_type": 13}}, {"pk": 38, "model": "auth.permission", "fields": {"codename": "change_quizattempt", "name": "Can change quiz attempt", "content_type": 13}}, {"pk": 39, "model": "auth.permission", "fields": {"codename": "delete_quizattempt", "name": "Can delete quiz attempt", "content_type": 13}}, {"pk": 40, "model": "auth.permission", "fields": {"codename": "add_anonquizattempt", "name": "Can add anon quiz attempt", "content_type": 14}}, {"pk": 41, "model": "auth.permission", "fields": {"codename": "change_anonquizattempt", "name": "Can change anon quiz attempt", "content_type": 14}}, {"pk": 42, "model": "auth.permission", "fields": {"codename": "delete_anonquizattempt", "name": "Can delete anon quiz attempt", "content_type": 14}}, {"pk": 43, "model": "auth.permission", "fields": {"codename": "add_aggregateconceptattempt", "name": "Can add aggregate concept attempt", "content_type": 15}}, {"pk": 44, "model": "auth.permission", "fields": {"codename": "change_aggregateconceptattempt", "name": "Can change aggregate concept attempt", "content_type": 15}}, {"pk": 45, "model": "auth.permission", "fields": {"codename": "delete_aggregateconceptattempt", "name": "Can delete aggregate concept attempt", "content_type": 15}}]