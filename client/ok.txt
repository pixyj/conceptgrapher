diff --git a/client/js/lift.js b/client/js/lift.js
index c8472a3..b9a8327 100644
--- a/client/js/lift.js
+++ b/client/js/lift.js
@@ -64,9 +64,11 @@ var TableView = ListView.extend({
 	columns: [],
 	render: function() {
 		var head = $("<thead>");
+		var headRow = $("<tr>");
 		this.columns.forEach(function(c) {
-			head.append($("<th>").html(c))
+			headRow.append($("<th>").html(c))
 		});
+		$(head).append(headRow);
 		this.tbody = $("<tbody>");
 		this.$el.append(head);
 		this.$el.append(this.tbody);
@@ -91,3 +93,17 @@ var ContainerMixin = {
 	}			
 }
 
+var UpdateModelMixin = {
+	incr: function(attr, by) {
+		by = by || 1;
+		var old = this.get(attr);
+		this.set(attr, old + by);
+		return this;
+	},
+	decr: function(attr, by) {
+		by = by || 1;
+		var old = this.get(attr);
+		this.set(attr, old - by);
+		return this;
+	}
+}
\ No newline at end of file
diff --git a/client/js/quiz.js b/client/js/quiz.js
index eb7ee50..3448b54 100644
--- a/client/js/quiz.js
+++ b/client/js/quiz.js
@@ -52,6 +52,7 @@ var QuizView = BaseView.extend({
 	},
 	afterRender: function() {
 		this.$el.find(".quiz-guess").focus();
+		window.scrollTo(0, 0);
 	},
 	renderChoices:function(choices) {
 		this.choices = [];
@@ -181,7 +182,7 @@ var AttemptDetailedTableView = TableView.extend({
 	columns: ['Quiz', 'Guess', 'Result'],
 	SingleView: AttemptDetailedView,
 	afterRender: function() {
-		this.$el.addClass("table table-striped table-bordered");
+		this.$el.addClass("table table-striped table-bordered table-hover");
 	}
 });
 
@@ -195,6 +196,7 @@ var StatsContainerView = BaseView.extend({
 	render: function() {
 		this.attempts.render();
 		this.$el.append(this.attempts.$el);
+		this.afterRender();
 	}
 });
 _.extend(StatsContainerView.prototype, ContainerMixin);
@@ -235,15 +237,53 @@ var DetailedAttempt = Backbone.Model.extend({
 
 });
 
+var AggregateStats = Backbone.Model.extend({
+	defaults: {
+		correctAttempts: 0,
+		wrongAttempts: 0,
+		totalQuizzes: 0
+	},
+	initialize: function(options) {
+		this.options = options;
+		this.options.collection.on("add", this.update, this);
+
+	},
+	getTotalAttempts: function() {
+		return this.correctAttempts + this.wrongAttempts;
+	},
+	getProgress: function() {
+		var totalQuizzes = this.options.quizModels.length;
+		if(totalQuizzes === 0) {
+			return 0;
+		}
+		return this.get("correctAttempts") / totalQuizzes;
+	},
+	update: function(attempt) {
+		attempt = attempt.toJSON();
+		if(attempt.result) {
+			this.incr("correctAttempts");
+		} else {
+			this.incr("wrongAttempts");
+		}
+	}
+});
+_.extend(AggregateStats.prototype, UpdateModelMixin);
+
 var DetailedAttemptCollection = Backbone.Collection.extend({
-	model: DetailedAttempt
+	model: DetailedAttempt,
+	initialize: function(options) {
+		// this.aggregateStats = new AggregateStats({
+		// 	collection: this,
+		// 	quizModels: options.quizCollection.models
+		// });
+	},
+
 });
 
 App.mk = new Markdown.Converter();
 
 var Quiz = Backbone.Model.extend({
 	parse: function(attrs) {
-		console.log(attrs);
 		this.attempts = new AttemptCollection(attrs.attempts)
 		delete attrs.attempts;
 		attrs.question = App.mk.makeHtml(attrs.question);
@@ -273,7 +313,9 @@ var QuizCollection = Backbone.Collection.extend({
 		return models;
 	},
 	initialize: function() {
-		this.detailedAttemptCollection = new DetailedAttemptCollection();
+		this.detailedAttemptCollection = new DetailedAttemptCollection({
+			quizCollection: this
+		});
 		this.on("add", this.listenToQuizAttempts, this);
 
 	},
@@ -323,6 +365,7 @@ var AppRouter = Backbone.Router.extend({
 		this.currentView = new obj.constructor(obj.options);
 		this.currentView.render();
 		$("#content-wrapper").html(this.currentView.$el);
+		window.scrollTo(0, 0);
 		return this.currentView;
 	},
 
